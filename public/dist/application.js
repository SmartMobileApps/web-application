"use strict";var ApplicationConfiguration=function(){var applicationModuleName="yuno",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angular-growl"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("agent"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("profile"),ApplicationConfiguration.registerModule("search"),ApplicationConfiguration.registerModule("user-management"),angular.module("agent").config(["$stateProvider",function($stateProvider){$stateProvider.state("agent",{url:"/agent",templateUrl:"modules/agent/views/agent.client.view.html"})}]),angular.module("agent").controller("AgentController",["$scope","$modal",function($scope,$modal){$scope.showNewAgentModal=function(){$modal.open({templateUrl:"addAgent.html",controller:"newAgentModalInstanceCtrl"})},$scope.showConfigAgentModal=function(){$modal.open({templateUrl:"configAgent.html",controller:"configAgentModalInstanceCtrl"})}}]).controller("newAgentModalInstanceCtrl",["growl","$scope","$modalInstance",function(growl,$scope,$modalInstance){$scope.agent={name:"",fequency:"",time:"",email:""},$scope.addNewAgent=function(){growl.success("New agent has been added successfully",{ttl:-1}),$modalInstance.close()},$scope.close=function(){$modalInstance.close()}}]).controller("configAgentModalInstanceCtrl",["growl","$scope","$modalInstance",function(growl,$scope,$modalInstance){$scope.agent={name:"",fequency:"Daily",time:"",email:"default@email.com"},$scope.addNewAgent=function(){growl.success("New agent has been added successfully",{ttl:-1}),$modalInstance.close()},$scope.close=function(){$modalInstance.close()}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/search")}]).run(["$rootScope",function($rootScope){$rootScope.$on("$stateChangeStart",function(){})}]),angular.module("core").controller("HeaderController",["$scope","Menus","$location",function($scope,Menus,$location){$scope.isActive=function(route){return route===$location.path()},$scope.navigate=function(path){location.href=path}}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").directive("initScripts",[function(){return{restrict:"A",link:function(){$(".smooth-overflow").on("touchstart",function(){})}}}]).directive("rightnavToggle",[function(){return{restrict:"A",link:function(){setTimeout(function(){$(".right-toggler").on("click",function(e){$(".main-wrap").toggleClass("userbar-toggle"),e.preventDefault()})},125)}}}]).directive("leftToggler",[function(){return{restrict:"A",link:function(){setTimeout(function(){$(".left-toggler").click(function(e){$(".responsive-admin-menu").toggleClass("sidebar-toggle"),$(".content-wrapper").toggleClass("main-content-toggle-left"),e.preventDefault()})},125)}}}]).directive("mainMenu",[function(){return{restrict:"A",link:function(){setTimeout(function(){$(".responsive-menu").click(function(){$(".responsive-admin-menu #menu").slideToggle()}),$(window).resize(function(){$(".responsive-admin-menu #menu").removeAttr("style")}),function($root){var $accordions=$(".accordion",$root).add($root);$accordions.each(function(){var $this=$(this),$active=$("> li > a.submenu.active",$this);$active.next("ul").css("display","block"),$active.addClass("downarrow");var a=$active.attr("data-id")||"",$links=$this.children("li").children("a.submenu");$links.click(function(e){""!==a&&($("#"+a).prev("a").removeClass("downarrow"),$("#"+a).slideUp("fast")),a===$(this).attr("data-id")?($("#"+$(this).attr("data-id")).slideUp("fast"),$(this).removeClass("downarrow"),a=""):($("#"+$(this).attr("data-id")).slideDown("fast"),a=$(this).attr("data-id"),$(this).addClass("downarrow")),e.preventDefault()})})}($("#menu")),$(".responsive-admin-menu #menu li").hover(function(){$(this).addClass("opened").siblings("li").removeClass("opened")},function(){$(this).removeClass("opened")})},125)}}}]).directive("datatableInit",[function(){return{restrict:"A",link:function(scope,iElement){$(iElement).dataTable()}}}]).directive("powerwidgetInit",[function(){return{restrict:"A",link:function(){$("#powerwidgets").powerWidgets({grid:".bootstrap-grid",widgets:".powerwidget",localStorage:!0,deleteSettingsKey:"#deletesettingskey-options",settingsKeyLabel:"Reset settings?",deletePositionKey:"#deletepositionkey-options",positionKeyLabel:"Reset position?",sortable:!0,buttonsHidden:!1,toggleButton:!0,toggleClass:"fa fa-chevron-circle-up | fa fa-chevron-circle-down",toggleSpeed:200,onToggle:function(){},deleteButton:!0,deleteClass:"fa fa-times-circle",onDelete:function(widget){$("#delete-widget").modal(),$(widget).addClass("deletethiswidget")},editButton:!0,editPlaceholder:".powerwidget-editbox",editClass:"fa fa-cog | fa fa-cog",editSpeed:200,onEdit:function(){},fullscreenButton:!0,fullscreenClass:"fa fa-arrows-alt | fa fa-arrows-alt",fullscreenDiff:3,onFullscreen:function(){},buttonOrder:"%refresh% %delete% %edit% %fullscreen% %toggle%",opacity:1,dragHandle:"> header",placeholderClass:"powerwidget-placeholder",indicator:!0,indicatorTime:600,ajax:!0,timestampPlaceholder:".powerwidget-timestamp",timestampFormat:"Last update: %m%/%d%/%y% %h%:%i%:%s%",refreshButton:!0,refreshButtonClass:"fa fa-refresh",labelError:"Sorry but there was a error:",labelUpdated:"Last Update:",labelRefresh:"Refresh",labelDelete:"Delete widget:",afterLoad:function(){},rtl:!1,onChange:function(){},onSave:function(){}})}}}]).directive("cbpMenu",[function(){return{restrict:"A",link:function(){new cbpHorizontalSlideOutMenu(document.getElementById("cbp-hsmenu-wrapper"))}}}]).directive("inlineDatepicker",[function(){return{restrict:"A",link:function(scope,iElement){$(iElement).datepicker({dateFormat:"dd.mm.yy",prevText:'<i class="fa fa-chevron-left"></i>',nextText:'<i class="fa fa-chevron-right"></i>'})}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("profile").config(["$stateProvider",function($stateProvider){$stateProvider.state("change-password",{url:"/change-password",templateUrl:"modules/profile/views/change-password.client.view.html"}).state("update-profile",{url:"/update-profile",templateUrl:"modules/profile/views/update-profile.client.view.html"})}]),angular.module("profile").controller("ChangePasswordController",["$scope",function(){}]),angular.module("profile").controller("UpdateProfileController",["$scope",function(){}]),angular.module("search").config(["$stateProvider",function($stateProvider){$stateProvider.state("search",{url:"/search",templateUrl:"modules/search/views/search.client.view.html"})}]),angular.module("search").controller("SearchController",["$scope",function(){}]),angular.module("user-management").config(["$stateProvider",function($stateProvider){$stateProvider.state("add-user",{url:"/add-user",templateUrl:"modules/user-management/views/add-user.client.view.html"})}]),angular.module("user-management").controller("AddUserController",["$scope","$modal",function($scope,$modal){$scope.showNewUserModal=function(){$modal.open({templateUrl:"addUser.html",controller:"newUserModalInstanceCtrl"})}}]).controller("newUserModalInstanceCtrl",["growl","$scope","$modalInstance","UsermanagementFactory",function(growl,$scope,$modalInstance,UsermanagementFactory){$scope.user={firstName:"",lastName:"",email:"",role:"",clientName:""},$scope.addNewUser=function(){UsermanagementFactory.save($scope.user).success(function(){growl.success("New user has been added successfully",{ttl:-1}),$modalInstance.close()}).error(function(err){err&&err.errorStatus>0&&growl.error(err.error,{ttl:-1}),$modalInstance.close()}),growl.success("New user has been added successfully",{ttl:-1}),$modalInstance.close()},$scope.close=function(){$modalInstance.close()}}]),angular.module("user-management").factory("UsermanagementFactory",["$http",function($http){return{save:function(user){return $http.post("/api/v1/signup",user)}}}]);